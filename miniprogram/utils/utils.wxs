function getDateDiff(dateTimeStamp) {
  var minute = 1000 * 60;
  var hour = minute * 60;
  var day = hour * 24;
  var halfamonth = day * 15;
  var month = day * 30;
  var year = month * 12
  var now = getDate();
  var diffValue = now - dateTimeStamp;
  if (diffValue < 0) {
    return;
  }
  var yearC = diffValue / year
  var monthC = diffValue / month;
  var weekC = diffValue / (7 * day);
  var dayC = diffValue / day;
  var hourC = diffValue / hour;
  var minC = diffValue / minute;

  function formatNumber(n) {
    n = n.toString()
    return n[1] ? n : '0' + n
  }

  function formatTimeTwo(number, format) {

    var formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
    var returnArr = [];

    var date = getDate(number);
    returnArr.push(date.getFullYear());
    returnArr.push(formatNumber(date.getMonth() + 1));
    returnArr.push(formatNumber(date.getDate()));

    returnArr.push(formatNumber(date.getHours()));
    returnArr.push(formatNumber(date.getMinutes()));
    returnArr.push(formatNumber(date.getSeconds()));

    for (var i = 0; i < returnArr.length; i++) {
      format = format.replace(formateArr[i], returnArr[i]);
    }
    return format;
  }
  if (dayC >= 1) {
    result = formatTimeTwo(dateTimeStamp, 'Y-M-D h:m')
  } else
    if (hourC >= 1) {
      result = "" + parseInt(hourC) + "小时前";
    } else if (minC >= 1) {
      result = "" + parseInt(minC) + "分钟前";
    } else
      result = "刚刚";
  return result;
}
function allTime(dateTimeStamp) {
  var now = getDate();
  var diffValue = now - dateTimeStamp;
  if (diffValue < 0) {
    return;
  }

  function formatNumber(n) {
    n = n.toString()
    return n[1] ? n : '0' + n
  }

  function formatTimeTwo(number, format) {

    var formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
    var returnArr = [];

    var date = getDate(number);
    returnArr.push(date.getFullYear());
    returnArr.push(formatNumber(date.getMonth() + 1));
    returnArr.push(formatNumber(date.getDate()));

    returnArr.push(formatNumber(date.getHours()));
    returnArr.push(formatNumber(date.getMinutes()));
    returnArr.push(formatNumber(date.getSeconds()));

    for (var i = 0; i < returnArr.length; i++) {
      format = format.replace(formateArr[i], returnArr[i]);
    }
    return format;
  }
  result = formatTimeTwo(dateTimeStamp, 'Y-M-D h:m');
  return result
}
function richText(text) {
  return text.replace('/\r\n/g', '<br/>').replace('/\n/g', '<br/>').replace('/\s/g', ' ')
}
function money(str) {
  // var newStr = "";
  // var count = 0;
  // str ? str : str = 0;
  // if (str.indexOf(".") == -1) {
  //   for (var i = str.length - 1; i >= 0; i--) {
  //     if (count % 3 == 0 && count != 0) {
  //       newStr = str.charAt(i) + "," + newStr;
  //     } else {
  //       newStr = str.charAt(i) + newStr;
  //     }
  //     count++;
  //   }
  //   str = newStr + ".00"; //自动补小数点后两位
  //   return str;
  // }
  // else {
  //   for (var i = str.indexOf(".") - 1; i >= 0; i--) {
  //     if (count % 3 == 0 && count != 0) {
  //       newStr = str.charAt(i) + "," + newStr; //碰到3的倍数则加上“,”号
  //     } else {
  //       newStr = str.charAt(i) + newStr; //逐个字符相接起来
  //     }
  //     count++;
  //   }
  //   str = newStr + (str + "00").substr((str + "00").indexOf("."), 3);
  //   return str;
  // }
  return str;
};
function fixMoney(num) {
  // let num = num > 0 ? num : num * (-1);
  var a = (num / 10000).toFixed(1);
  if (num >= 10000) {
    return a + 'w+'
  } else if (num <= -10000) {
    return a * -1 + 'w+'
  } else {
    return num
  }
}

module.exports = {
  time: getDateDiff, richText: richText, allTime: allTime, money: money, fixMoney: fixMoney
}